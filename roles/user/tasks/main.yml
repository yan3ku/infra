---
- name: "Passwd entry for {{ user_name }}"
  ansible.builtin.getent:
    database: passwd
    key: "{{ user_name }}"
  register: getent_passwd
  failed_when: false

- name: Getent user home
  ansible.builtin.set_fact:
    user_home: "{{ getent_passwd[user_name][4] }}"
  when: getent_passwd.found is defined

- name: Move user home directory
  when: getent_passwd.found is defined and user_home != user_home
  block:
    - name: Create user home directory
      ansible.builtin.file:
        state: directory
        path: "{{ user_home }}"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0755"

    - name: Ensure rsync
      ansible.builtin.package:
        name: rsync
        state: present

    - name: Sync old home to new home
      ansible.posix.synchronize:
        src: "/home/{{ user_name }}/"
        dest: "{{ user_home }}/"
        archive: true
      delegate_to: "{{ inventory_hostname }}"

    - name: Replace home path in /etc/passwd
      ansible.builtin.replace:
        path: /etc/passwd
        regexp: '/home/{{ user_name }}'
        replace: '{{ user_home }}'

    - name: Remove old home directory
      ansible.builtin.file:
        path: "/home/{{ user_name }}"
        state: absent

    # changing home directory like this breaks gpg agent
    # reseting connection nor restarting gpg agent fixes this
    # only solution for now that worked is rebooting...
    - name: Reboot the server
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible"
        reboot_timeout: 300

- name: Ensure user groups exists
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
  loop: "{{ user_groups }}"

- name: Add user to groups
  ansible.builtin.user:
    name: "{{ user_name }}"
    password: "{{ user_passwd | password_hash('sha512') }}"
    home: "{{ user_home }}"
    groups: "{{ users_map.keys() | list | union(user_groups) }}"
    append: true
    shell: "{{ user_shell }}"
    update_password: on_create

- name: Hush login
  ansible.builtin.file:
    path: "{{ user_home }}/.hushlogin"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    access_time: preserve
    modification_time: preserve
    mode: "0644"
    state: touch

- name: Allow passwordless sudo
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ user_name }}"
    content: "{{ user_name }} ALL=(ALL) NOPASSWD:ALL\n"
    owner: root
    group: root
    mode: '0440'
  when: user_nopasswd_sudo
  become: true

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.ssh"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0700'

- name: Add SSH public key to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ user_name }}"
    key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"
    state: present
